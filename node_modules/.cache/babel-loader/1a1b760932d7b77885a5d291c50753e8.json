{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\reactnotesmgr\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, Slide } from 'react-toastify';\nimport AuthPage from './pages/authpage.component';\nimport NotesPage from './pages/notespage.component';\nimport EditNotePage from './pages/editnotepage.component';\nimport Header from './components/header.component';\nimport Spinner from './components/spinner/spinner.component';\nimport { logoutUser } from './redux/actions/authActionCreators';\n\nconst App = ({\n  user,\n  dispatchLogoutAction\n}) => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    transition: Slide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Header, {\n    isLoggedIn: user.isLoggedIn,\n    userName: user.fullName,\n    onLogout: dispatchLogoutAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container my-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, !user.isLoggedIn ? React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/auth\",\n    component: AuthPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/notes\",\n    component: NotesPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/edit-note\",\n    component: EditNotePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/edit-note/:noteId\",\n    component: EditNotePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLogoutAction: () => dispatch(logoutUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/React/reactnotesmgr/src/App.js"],"names":["React","Switch","Route","Redirect","connect","ToastContainer","Slide","AuthPage","NotesPage","EditNotePage","Header","Spinner","logoutUser","App","user","dispatchLogoutAction","isLoggedIn","fullName","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uCAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,SAASC,UAAT,QAA2B,oCAA3B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoC;AAC9C,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,WAAzB;AAAqC,IAAA,SAAS,EAAE,IAAhD;AACE,IAAA,eAAe,MADjB;AACkB,IAAA,UAAU,EAAET,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEQ,IAAI,CAACE,UAAzB;AAAqC,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAApD;AACE,IAAA,QAAQ,EAAEF,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,IAAI,CAACE,UAAN,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,SAAS,EAAET,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADF,GAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,SAAS,EAAEC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,oBAAlB;AAAuC,IAAA,SAAS,EAAEA,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CANL,CANF,CADF;AAuBD,CAxBD;;AA0BA,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAAEL,EAAAA,IAAI,EAAEK,KAAK,CAACL;AAAd,CAAZ,CAAxB;;AACA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,oBAAoB,EAAE,MAAMM,QAAQ,CAACT,UAAU,EAAX;AADI,CAAf,CAA3B;;AAGA,eAAeR,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, Slide } from 'react-toastify';\n\nimport AuthPage from './pages/authpage.component';\nimport NotesPage from './pages/notespage.component';\nimport EditNotePage from './pages/editnotepage.component';\nimport Header from './components/header.component';\nimport Spinner from './components/spinner/spinner.component';\nimport { logoutUser } from './redux/actions/authActionCreators';\n\nconst App = ({ user, dispatchLogoutAction }) => {\n  return (\n    <React.Fragment>\n      <ToastContainer position=\"top-right\" autoClose={2000}\n        hideProgressBar transition={Slide} />\n      <Spinner />\n      <Header isLoggedIn={user.isLoggedIn} userName={user.fullName}\n        onLogout={dispatchLogoutAction} />\n      <div className=\"container my-5\">\n        {!user.isLoggedIn ?\n          (<Switch>\n            <Route exact path=\"/auth\" component={AuthPage} />\n            <Redirect to=\"/auth\" />\n          </Switch>) :\n          (<Switch>\n            <Route exact path=\"/notes\" component={NotesPage} />\n            <Route exact path=\"/edit-note\" component={EditNotePage} />\n            <Route exact path=\"/edit-note/:noteId\" component={EditNotePage} />\n            <Redirect to=\"/notes\" />\n          </Switch>)\n        }\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({ user: state.user });\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogoutAction: () => dispatch(logoutUser())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}