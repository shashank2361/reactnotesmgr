{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\reactnotesmgr\\\\src\\\\components\\\\spinner\\\\spinner.component.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './spinner.css';\n\nconst Spinner = ({\n  isLoading\n}) => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n  id: \"spinner-fade\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 26\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"default-spinner spinner-border\",\n  role: \"status\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }\n})) : null);\n\n_c = Spinner;\n\nconst mapStateToProps = state => ({\n  isLoading: state.loading\n});\n\nexport default connect(mapStateToProps)(Spinner);\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"sources":["E:/React/reactnotesmgr/src/components/spinner/spinner.component.js"],"names":["React","connect","Spinner","isLoading","mapStateToProps","state","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,eAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQA,SAAS,gBAAI;AAAK,EAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACT;AAAK,EAAA,SAAS,EAAC,gCAAf;AAAgD,EAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADS,CAAJ,GAEC,IAJlB,CADJ;;KAAMD,O;;AASN,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,SAAS,EAAEE,KAAK,CAACC;AADa,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CAACG,eAAD,CAAP,CAAyBF,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './spinner.css';\n\nconst Spinner = ({ isLoading }) => (\n    <React.Fragment>\n        {\n            isLoading ? (<div id=\"spinner-fade\">\n                <div className=\"default-spinner spinner-border\" role=\"status\"></div>\n            </div>) : null}\n    </React.Fragment>\n);\n\nconst mapStateToProps = state => ({\n    isLoading: state.loading\n});\nexport default connect(mapStateToProps)(Spinner);\n"]},"metadata":{},"sourceType":"module"}