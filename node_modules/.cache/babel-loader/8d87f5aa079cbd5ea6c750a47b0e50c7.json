{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\reactnotesmgr\\\\src\\\\components\\\\notescollection.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteNoteById } from './../redux/actions/notesActionCreators';\n\nconst NotesCollection = ({\n  notes,\n  dispatchDeleteAction\n}) => {\n  _s();\n\n  const [selectedNote, setSelectedNote] = useState('');\n\n  const showConfirmationModal = (event, noteId) => {\n    event.preventDefault();\n    setSelectedNote(noteId);\n    window.$('#confirmationModal').modal('show');\n  };\n\n  const handleOnDelete = () => {\n    dispatchDeleteAction(selectedNote, () => {\n      window.$('#confirmationModal').modal('hide');\n      toast.success('Note deleted Successfully!');\n    }, message => {\n      window.$('#confirmationModal').modal('hide');\n      toast.error(`Error: ${message}`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, notes.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/edit-note/${item._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, item.content), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, item.category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    onClick: e => showConfirmationModal(e, item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-trash-alt fa-2x text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }))))))), /*#__PURE__*/React.createElement(Modal, {\n    handleOnDelete: handleOnDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(NotesCollection, \"L2l+SK5yUVoxHYIJR6X3bEDnXM4=\");\n\n_c = NotesCollection;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchDeleteAction: (noteId, onSuccess, onError) => dispatch(deleteNoteById(noteId, onSuccess, onError))\n});\n\nexport default connect(null, mapDispatchToProps)(NotesCollection);\n\nconst Modal = ({\n  handleOnDelete\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"modal\",\n  id: \"confirmationModal\",\n  tabIndex: \"-1\",\n  role: \"dialog\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  role: \"document\",\n  className: \"modal-dialog\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"modal-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"modal-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"modal-title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }\n}, \"Confirmation\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"modal-body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 21\n  }\n}, \"Are you sure, you want to delete this note ?\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"modal-footer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  \"data-dismiss\": \"modal\",\n  className: \"btn btn-secondary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 21\n  }\n}, \"No\"), /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  \"data-dismiss\": \"modal\",\n  onClick: handleOnDelete,\n  className: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 21\n  }\n}, \"Yes\")))));\n\n_c2 = Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotesCollection\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["E:/React/reactnotesmgr/src/components/notescollection.component.js"],"names":["React","useState","Link","connect","toast","deleteNoteById","NotesCollection","notes","dispatchDeleteAction","selectedNote","setSelectedNote","showConfirmationModal","event","noteId","preventDefault","window","$","modal","handleOnDelete","success","message","error","map","item","_id","title","content","description","category","e","mapDispatchToProps","dispatch","onSuccess","onError","Modal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteNoteById } from './../redux/actions/notesActionCreators';\n\nconst NotesCollection = ({ notes, dispatchDeleteAction }) => {\n\n    const [selectedNote, setSelectedNote] = useState('');\n\n    const showConfirmationModal = (event, noteId) => {\n        event.preventDefault();\n        setSelectedNote(noteId);\n        window.$('#confirmationModal').modal('show');\n    };\n\n    const handleOnDelete = () => {\n        dispatchDeleteAction(selectedNote, () => {\n            window.$('#confirmationModal').modal('hide');\n            toast.success('Note deleted Successfully!');\n        }, (message) => {\n            window.$('#confirmationModal').modal('hide');\n            toast.error(`Error: ${message}`);\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <table className=\"table table-hover\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Content</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Category</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        notes.map(item => (\n                            <tr key={item._id}>\n                                <td>\n                                    <Link to={`/edit-note/${item._id}`}>\n                                        {item.title}\n                                    </Link>\n                                </td>\n                                <td>{item.content}</td>\n                                <td>{item.description}</td>\n                                <td>{item.category}</td>\n                                <td>\n                                    <a href=\"/\" onClick={(e) => showConfirmationModal(e, item._id)}>\n                                        <i className=\"fas fa-trash-alt fa-2x text-danger\"></i>\n                                    </a>\n                                </td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n            <Modal handleOnDelete={handleOnDelete} />\n        </React.Fragment>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchDeleteAction: (noteId, onSuccess, onError) =>\n        dispatch(deleteNoteById(noteId, onSuccess, onError))\n});\nexport default connect(null, mapDispatchToProps)(NotesCollection);\n\nconst Modal = ({ handleOnDelete }) => (\n    <div className=\"modal\" id=\"confirmationModal\" tabIndex=\"-1\" role=\"dialog\">\n        <div role=\"document\" className=\"modal-dialog\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Confirmation</h5>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Are you sure, you want to delete this note ?</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" data-dismiss=\"modal\" className=\"btn btn-secondary\">\n                        No\n                    </button>\n                    <button type=\"button\" data-dismiss=\"modal\" onClick={handleOnDelete} className=\"btn btn-primary\">\n                        Yes\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n"]},"metadata":{},"sourceType":"module"}