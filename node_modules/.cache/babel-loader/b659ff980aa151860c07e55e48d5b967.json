{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\reactnotesmgr\\\\src\\\\pages\\\\editnotepage.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { createNote, getNoteById, updateNoteById } from './../redux/actions/notesActionCreators';\n\nconst EditNotePage = ({\n  match,\n  history,\n  dispatchCreateNoteAction,\n  dispatchGetNoteByIdAction,\n  dispatchUpdateNoteAction\n}) => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [error, setError] = useState({\n    title: false,\n    content: false,\n    description: false,\n    category: false\n  });\n  useEffect(() => {\n    const {\n      noteId\n    } = match.params;\n\n    if (noteId) {\n      dispatchGetNoteByIdAction(noteId, ({\n        title,\n        content,\n        description,\n        category\n      }) => {\n        setTitle(title);\n        setContent(content);\n        setDescription(description);\n        setCategory(category);\n      });\n    }\n  }, [dispatchGetNoteByIdAction, match.params]);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (isFormInvalid()) updateErrorFlags();else {\n      const {\n        noteId\n      } = match.params;\n      const data = {\n        title,\n        content,\n        description,\n        category\n      };\n\n      if (noteId) {\n        dispatchUpdateNoteAction(noteId, data, () => {\n          toast.success('Note updated Successfully!');\n          history.replace('/notes');\n        }, message => toast.error(`Error: ${message}`));\n      } else {\n        dispatchCreateNoteAction(data, () => {\n          toast.success('Note created Successfully!');\n          history.replace('/notes');\n        }, message => toast.error(`Error: ${message}`));\n      }\n    }\n  };\n\n  const isFormInvalid = () => !title.trim() || !content.trim() || !description.trim() || !category;\n\n  const updateErrorFlags = () => {\n    const errObj = {\n      title: false,\n      content: false,\n      description: false,\n      category: false\n    };\n    if (!title.trim()) errObj.title = true;\n    if (!content.trim()) errObj.content = true;\n    if (!description.trim()) errObj.description = true;\n    if (!category) errObj.category = true;\n    setError(errObj);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Edit Note\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    noValidate: true,\n    id: \"title\",\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    className: `form-control ${error.title ? 'is-invalid' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(\"input\", {\n    noValidate: true,\n    id: \"content\",\n    type: \"text\",\n    placeholder: \"Content\",\n    name: \"content\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    className: `form-control ${error.content ? 'is-invalid' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    noValidate: true,\n    id: \"description\",\n    type: \"text\",\n    placeholder: \"Description\",\n    name: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    className: `form-control ${error.description ? 'is-invalid' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    noValidate: true,\n    id: \"category\",\n    name: \"category\",\n    className: `form-control ${error.category ? 'is-invalid' : ''}`,\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"-- Select --\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"GENERAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, \"General\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"IDPROOF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"ID Proof\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PROFESSIONAL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"Professional\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mr-2 btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Save | \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 40\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => history.replace(\"/notes\"),\n    className: \"btn btn-secondary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Cancel | \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 42\n    }\n  })))))));\n};\n\n_s(EditNotePage, \"LS2GyzF4r2wMNzYvDtKawtWTj+k=\");\n\n_c = EditNotePage;\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCreateNoteAction: (data, onSuccess, onError) => dispatch(createNote(data, onSuccess, onError)),\n  dispatchUpdateNoteAction: (noteId, data, onSuccess, onError) => dispatch(updateNoteById(noteId, data, onSuccess, onError)),\n  dispatchGetNoteByIdAction: (noteId, onSuccess) => dispatch(getNoteById(noteId, onSuccess))\n});\n\nexport default connect(null, mapDispatchToProps)(EditNotePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNotePage\");","map":{"version":3,"sources":["E:/React/reactnotesmgr/src/pages/editnotepage.component.js"],"names":["React","useState","useEffect","connect","toast","createNote","getNoteById","updateNoteById","EditNotePage","match","history","dispatchCreateNoteAction","dispatchGetNoteByIdAction","dispatchUpdateNoteAction","title","setTitle","content","setContent","description","setDescription","category","setCategory","error","setError","noteId","params","handleOnSubmit","event","preventDefault","isFormInvalid","updateErrorFlags","data","success","replace","message","trim","errObj","e","target","value","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { createNote, getNoteById, updateNoteById } from './../redux/actions/notesActionCreators';\n\nconst EditNotePage = ({ match, history, dispatchCreateNoteAction, dispatchGetNoteByIdAction, dispatchUpdateNoteAction }) => {\n\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [error, setError] = useState({ title: false, content: false, description: false, category: false });\n\n    useEffect(() => {\n        const { noteId } = match.params;\n        if (noteId) {\n            dispatchGetNoteByIdAction(noteId, ({ title, content, description, category }) => {\n                setTitle(title);\n                setContent(content);\n                setDescription(description);\n                setCategory(category);\n            });\n        }\n    }, [dispatchGetNoteByIdAction, match.params]);\n\n    const handleOnSubmit = event => {\n        event.preventDefault();\n        if (isFormInvalid()) updateErrorFlags();\n        else {\n            const { noteId } = match.params;\n            const data = { title, content, description, category };\n            if (noteId) {\n                dispatchUpdateNoteAction(noteId, data, () => {\n                    toast.success('Note updated Successfully!');\n                    history.replace('/notes');\n                }, (message) => toast.error(`Error: ${message}`));\n            } else {\n                dispatchCreateNoteAction(data, () => {\n                    toast.success('Note created Successfully!');\n                    history.replace('/notes');\n                }, (message) => toast.error(`Error: ${message}`));\n            }\n        }\n    };\n\n    const isFormInvalid = () => (!title.trim() || !content.trim() || !description.trim() || !category);\n\n    const updateErrorFlags = () => {\n        const errObj = { title: false, content: false, description: false, category: false };\n        if (!title.trim()) errObj.title = true;\n        if (!content.trim()) errObj.content = true;\n        if (!description.trim()) errObj.description = true;\n        if (!category) errObj.category = true;\n        setError(errObj);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <h2>Edit Note</h2>\n                </div>\n            </div>\n            <div className=\"row align-items-center mt-4\">\n                <div className=\"col-9\">\n                    <form noValidate onSubmit={handleOnSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input noValidate id=\"title\"\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                name=\"title\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                className={`form-control ${error.title ? 'is-invalid' : ''}`} />\n                            <p className=\"invalid-feedback\">Required</p>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"content\">Content</label>\n                            <input noValidate id=\"content\"\n                                type=\"text\"\n                                placeholder=\"Content\"\n                                name=\"content\"\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                className={`form-control ${error.content ? 'is-invalid' : ''}`} />\n                            <p className=\"invalid-feedback\">Required</p>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input noValidate id=\"description\"\n                                type=\"text\"\n                                placeholder=\"Description\"\n                                name=\"description\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                                className={`form-control ${error.description ? 'is-invalid' : ''}`} />\n                            <p className=\"invalid-feedback\">Required</p>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"category\">Category</label>\n                            <select noValidate id=\"category\"\n                                name=\"category\"\n                                className={`form-control ${error.category ? 'is-invalid' : ''}`}\n                                value={category}\n                                onChange={(e) => setCategory(e.target.value)}>\n                                <option value=\"\">-- Select --</option>\n                                <option value=\"GENERAL\">General</option>\n                                <option value=\"IDPROOF\">ID Proof</option>\n                                <option value=\"PROFESSIONAL\">Professional</option>\n                            </select>\n                            <p className=\"invalid-feedback\">Required</p>\n                        </div>\n\n                        <div className=\"mt-5\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2 btn-lg\">\n                                Save | <i className=\"fas fa-save\"></i>\n                            </button>\n                            <button type=\"button\"\n                                onClick={() => history.replace(\"/notes\")}\n                                className=\"btn btn-secondary btn-lg\">\n                                Cancel | <i className=\"fas fa-times\"></i>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchCreateNoteAction: (data, onSuccess, onError) =>\n        dispatch(createNote(data, onSuccess, onError)),\n    dispatchUpdateNoteAction: (noteId, data, onSuccess, onError) =>\n        dispatch(updateNoteById(noteId, data, onSuccess, onError)),\n    dispatchGetNoteByIdAction: (noteId, onSuccess) =>\n        dispatch(getNoteById(noteId, onSuccess))\n});\nexport default connect(null, mapDispatchToProps)(EditNotePage);\n"]},"metadata":{},"sourceType":"module"}