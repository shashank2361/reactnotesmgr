{"ast":null,"code":"import * as constants from './../constants';\nexport const fetchAllNotes = () => ({\n  type: constants.API,\n  payload: {\n    method: 'GET',\n    url: '/api/notes',\n    success: response => setAllNotes(response)\n  }\n});\nexport const createNote = (data, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'POST',\n    url: '/api/notes',\n    data,\n    success: note => addNote(note),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError\n  }\n});\nexport const getNoteById = (noteId, onSuccess) => ({\n  type: constants.API,\n  payload: {\n    method: 'GET',\n    url: `/api/notes/${noteId}`,\n    postProcessSuccess: onSuccess\n  }\n});\nexport const updateNoteById = (noteId, data, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'PUT',\n    url: `/api/notes/${noteId}`,\n    data,\n    success: (noteId, data) => updateNote(noteId, data),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError\n  }\n});\nexport const deleteNoteById = (noteId, onSuccess, onError) => ({\n  type: constants.API,\n  payload: {\n    method: 'DELETE',\n    url: `/api/notes/${noteId}`,\n    success: () => removeNote(noteId),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError\n  }\n});\n\nconst addNote = note => ({\n  type: constants.ADD_NOTE,\n  payload: note\n});\n\nconst setAllNotes = data => ({\n  type: constants.SET_ALL_NOTES,\n  payload: data\n});\n\nconst updateNote = (noteId, data) => ({\n  type: constants.UPDATE_NOTE,\n  payload: {\n    noteId,\n    data\n  }\n});\n\nconst removeNote = noteId => ({\n  type: constants.REMOVE_NOTE,\n  payload: noteId\n});","map":{"version":3,"sources":["E:/React/reactnotesmgr/src/redux/actions/notesActionCreators.js"],"names":["constants","fetchAllNotes","type","API","payload","method","url","success","response","setAllNotes","createNote","data","onSuccess","onError","note","addNote","postProcessSuccess","postProcessError","getNoteById","noteId","updateNoteById","updateNote","deleteNoteById","removeNote","ADD_NOTE","SET_ALL_NOTES","UPDATE_NOTE","REMOVE_NOTE"],"mappings":"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","sourcesContent":["import * as constants from './../constants';\n\nexport const fetchAllNotes = () => ({\n    type: constants.API,\n    payload: {\n        method: 'GET',\n        url: '/api/notes',\n        success: (response) => (setAllNotes(response))\n    }\n});\n\nexport const createNote = (data, onSuccess, onError) => ({\n    type: constants.API,\n    payload: {\n        method: 'POST',\n        url: '/api/notes',\n        data,\n        success: (note) => (addNote(note)),\n        postProcessSuccess: onSuccess,\n        postProcessError: onError\n    }\n});\n\nexport const getNoteById = (noteId, onSuccess) => ({\n    type: constants.API,\n    payload: {\n        method: 'GET',\n        url: `/api/notes/${noteId}`,\n        postProcessSuccess: onSuccess\n    }\n});\n\nexport const updateNoteById = (noteId, data, onSuccess, onError) => ({\n    type: constants.API,\n    payload: {\n        method: 'PUT',\n        url: `/api/notes/${noteId}`,\n        data,\n        success: (noteId, data) => (updateNote(noteId, data)),\n        postProcessSuccess: onSuccess,\n        postProcessError: onError\n    }\n});\n\nexport const deleteNoteById = (noteId, onSuccess, onError) => ({\n    type: constants.API,\n    payload: {\n        method: 'DELETE',\n        url: `/api/notes/${noteId}`,\n        success: () => (removeNote(noteId)),\n        postProcessSuccess: onSuccess,\n        postProcessError: onError\n    }\n});\n\nconst addNote = (note) => ({\n    type: constants.ADD_NOTE,\n    payload: note\n});\n\nconst setAllNotes = (data) => ({\n    type: constants.SET_ALL_NOTES,\n    payload: data\n});\n\nconst updateNote = (noteId, data) => ({\n    type: constants.UPDATE_NOTE,\n    payload: { noteId, data }\n});\n\nconst removeNote = (noteId) => ({\n    type: constants.REMOVE_NOTE,\n    payload: noteId\n});"]},"metadata":{},"sourceType":"module"}